penduinART
==========

HTML5 Game engine.  Piece together multiple images into armatures and settings
which are easy to adjust and animate.  Assets are plain images, structural
data is plain JSON, and code is plain JavaScript.

Unlike other HTML5 game engines, penduinART centers on the artwork, not tiles
or spritesheets.  It may be used to create grid-based games, but has no
restrictions or internal concept of tiles.  Animation will support swapping
out images, but is focused on armatures made of image pieces.


Where to start
--------------

The files "thingmaker.html" and "test*.html" are the most interesting at the
moment.  They're not pretty, but using and editing them will show you around
the current state of penduinART.

Music support is in-progress and can be played with using "musictool.html".

The file "src/penduinart.js" is the main engine.
Probably, "src/smogheapinput.js" will be revamped and become its own thing.


Philosophy
----------

penduinART aims to be:
- Useful for quickly turning scribbles (or even good artwork ;^) into games.
- Dependency-free.  If someone wants JQuery or whatever, that's their problem.
- Fun and easy for 2D web games.  Not one engine to rule them all.
- Efficient and fast, though not at the expense of clarity or ease of use.
- FirefoxOS phone ready.  (And any low-end but highly-interesting web device.)
- Wii U browser (and Nintendo Web Framework) compatible
- Free as in speech, free as in beer, free to learn from and build upon.


State of penduinART
-------------------

Working right now:
- base engine supports loading image resources and rendering
- any-point-in-the-armature controls: rotate, transparency, scale, flip
- "thingmaker" tool helps easily arrange images into armatures
- simple examples showing penduinART usage
- tag support (show/hide pieces depending on a persistent tag list)
+ scene support (manage objects/scale, decoupled tick/render loop)
  - pause/resume, fps/ticks display toggle
  - N64-style scene transitions (star wipe!)
  - jaggy (non-antialiased) rendering option
- pose support in engine and thingmaker
- basic "instance" support - quick array of positioned/scaled clones
- basic layered background support - optimized multi-object rendering
+ full-scene visual effects
  - vignette
  - motion ghosting

Planned features:
- pose-sequence animations supported in engine and "thingmaker"
- generic input mapper with keyboard, mouse, gamepad, touch support
- "placemaker" tool for easily creating multi-layered scrollable settings
- game templates for easily starting new projects
- music assets: loading and customizable looping
- sound fx assets and integration with animation timing
- full object management and animation
- collision detection, in/out-bounds area marking
- particle effects
- scene loading/unloading/swapping

Possible extras:
- procedural armatures
- scrapheap monster demo - build randomized critters from scrapheap assets
